name: Create a Release

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: "Issue number to comment on"
        required: true

env:
  VERSION: ${{ github.run_number }}
  YANDEX_CONTAINER_REGISTRY: ${{ secrets.YANDEX_CONTAINER_REGISTRY }}
  YANDEX_OAUTH_TOKEN: ${{ secrets.YANDEX_OAUTH_TOKEN }}

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest 
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  test:
    name: Test Code
    runs-on: ubuntu-latest
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test

  release:
    name: New Release
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commits since last tag
        id: get_commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          COMMITS=$(git log --pretty=format:"- %h: %s (%an)" $LAST_TAG..HEAD)
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Release Branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b releases/$VERSION
          git push origin releases/$VERSION

      - name: Update CHANGELOG.md
        run: |
          echo "## $VERSION ($(date +'%Y-%m-%d'))" > new_changelog.md
          echo "" >> new_changelog.md
          echo "${{ steps.get_commits.outputs.commits }}" >> new_changelog.md
          echo "" >> new_changelog.md
          
          if [ -f CHANGELOG.md ]; then
            cat new_changelog.md CHANGELOG.md > CHANGELOG.tmp
            mv CHANGELOG.tmp CHANGELOG.md
          else
            mv new_changelog.md CHANGELOG.md
          fi
          
          git add CHANGELOG.md
          git commit -m "chore: update changelog for v${VERSION}"
          git push origin releases/$VERSION

      - name: Build Docker Image
        run: |
          docker build -t cr.yandex/${YANDEX_CONTAINER_REGISTRY}/app:${VERSION} .
          docker tag cr.yandex/${YANDEX_CONTAINER_REGISTRY}/app:${VERSION} cr.yandex/${YANDEX_CONTAINER_REGISTRY}/app:${VERSION}_latest

      - name: Login in Yandex Container Registry
        run: |
          echo ${YANDEX_OAUTH_TOKEN}|docker login \
            --username oauth \
            --password-stdin \
            cr.yandex

      - name: Push Docker Images
        run: |
          docker push cr.yandex/${YANDEX_CONTAINER_REGISTRY}/app:${VERSION}
          docker push cr.yandex/${YANDEX_CONTAINER_REGISTRY}/app:${VERSION}_latest

      - name: Added Version Tag
        run: |
          git tag v${VERSION}
          git push origin v${VERSION}

      - name: Add comment to issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ inputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Release Fix Details
**Date**: ${new Date().toISOString()}
**Author**: ${context.actor}

**Commits since last release**:
${${{ steps.get_commits.outputs.commits }}}

**Docker Image**:
\`cr.yandex/${process.env.YANDEX_CONTAINER_REGISTRY}/app:${process.env.VERSION}\`
              `
            });
