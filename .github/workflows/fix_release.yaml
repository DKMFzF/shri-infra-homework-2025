name: Fix Release

on:
  workflow_dispatch:
    inputs:
      RV:
        description: "Release -ver fix"
        required: true

env:
  YANDEX_CONTAINER_REGISTRY: ${{ secrets.YANDEX_CONTAINER_REGISTRY }}
  YANDEX_OAUTH_TOKEN: ${{ secrets.YANDEX_OAUTH_TOKEN }}
  FIX_VERSION: ${{ github.run_number }}

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest 
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  test:
    name: Test Code
    runs-on: ubuntu-latest
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test

  fix-release:
    name: Fix Release
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.RV }}
      
      - name: Build and tag Docker image
        run: |
          docker build -t cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }} .
          docker tag cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }} cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_latest

      - name: Login in Yandex Container Registry
        run: |
          echo ${YANDEX_OAUTH_TOKEN} | docker login \
            --username oauth \
            --password-stdin \
            cr.yandex

      - name: Push Docker images
        run: |
          docker push cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }}
          docker push cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_latest

      - name: Create git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${{ inputs.RV }}_fix${{ env.FIX_VERSION }}
          git push origin v${{ inputs.RV }}_fix${{ env.FIX_VERSION }}

      - name: Get commits since last tag
        id: get_commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          COMMITS=$(git log --pretty=format:"%h - %an, %ar : %s" $LAST_TAG..HEAD)
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create release summary
        run: |
          echo "Fix release details:" >> summary.md
          echo "- Date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> summary.md
          echo "- Author: $GITHUB_ACTOR" >> summary.md
          echo "- Commits since last release:" >> summary.md
          echo '```' >> summary.md
          echo "${{ steps.get_commits.outputs.commits }}" >> summary.md
          echo '```' >> summary.md
          echo "- Docker image: cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }}" >> summary.md

      - name: Upload release summary
        uses: actions/upload-artifact@v3
        with:
          name: release-summary
          path: summary.md
