name: Fix Release

on:
  workflow_dispatch:
    inputs:
      RV:
        description: "Release -ver fix"
        required: true

env:
  YANDEX_CONTAINER_REGISTRY: ${{ secrets.YANDEX_CONTAINER_REGISTRY }}
  YANDEX_OAUTH_TOKEN: ${{ secrets.YANDEX_OAUTH_TOKEN }}
  FIX_VERSION: ${{ github.run_number }}

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest 
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  test:
    name: Test Code
    runs-on: ubuntu-latest
    steps:
      - name: Uses checkout code
        uses: actions/checkout@v4

      - name: Uses setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start download dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test

  fix-release:
    name: Fix Release
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.RV }}
          fetch-depth: 0
      
      - name: Build and tag Docker image
        run: |
          docker build -t cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }} .
          docker tag cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }} cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_latest

      - name: Login in Yandex Container Registry
        run: |
          echo ${YANDEX_OAUTH_TOKEN} | docker login \
            --username oauth \
            --password-stdin \
            cr.yandex

      - name: Push Docker images
        run: |
          docker push cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }}
          docker push cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_latest

      - name: Create git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${{ inputs.RV }}_fix${{ env.FIX_VERSION }}
          git push origin v${{ inputs.RV }}_fix${{ env.FIX_VERSION }}

      - name: Get commits since last tag
        id: get_commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          COMMITS=$(git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD)
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Find related issue
        id: find_issue
        run: |
          # Ищем issue, связанную с этим релизом (по номеру версии в заголовке)
          ISSUE_TITLE="Release V${{ inputs.RV }}"
          echo "Looking for issue with title: $ISSUE_TITLE"
          echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT

      - name: Add fix release comment to issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              sort: 'created',
              direction: 'desc'
            });

            const targetIssue = issues.find(issue => 
              issue.title.includes('${{ steps.find_issue.outputs.issue_title }}')
            );

            if (!targetIssue) {
              console.log('No matching issue found');
              return;
            }

            const commitList = `${{ steps.get_commits.outputs.commits }}`;
            const dockerImage = `cr.yandex/${{ env.YANDEX_CONTAINER_REGISTRY }}/app:${{ inputs.RV }}_fix${{ env.FIX_VERSION }}`;

            const commentBody = `
            ## Fix Release Information
            - **Date**: ${new Date().toISOString()}
            - **Author**: **[${context.actor}](https://github.com/${context.actor})**
            - **Fix Version**: v${{ inputs.RV }}_fix${{ env.FIX_VERSION }}

            ## Changes since last release:
            ${commitList}

            ## Link on Docker Image:
            \`${dockerImage}\`
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: targetIssue.number,
              body: commentBody
            });
